format_version: "5"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: other

app:
  envs:
    - SRC_DIR_IN_GOPATH: "$GOPATH/src/github.com/bitrise-io/envman"
    - opts:
        is_expand: false
      TARGET_OS: both
    - opts:
        is_expand: false
      BIN_NAME: envman
    - opts:
        is_expand: false
      PACKAGE_NAME: github.com/bitrise-io/envman
    - LD_FLAGS: "-X ${PACKAGE_NAME}/version.BuildNumber=$BITRISE_BUILD_NUMBER -X ${PACKAGE_NAME}/version.Commit=$BITRISE_GIT_COMMIT"

trigger_map:
  - push_branch: "*"
    workflow: test
  - tag: "*.*.*"
    workflow: release
workflows:
  test:
    title: Runs tests
    steps:
    - change-workdir:
        inputs:
          - path: "${SRC_DIR_IN_GOPATH}"
    - git-clone: {}
    - go-list: {}
    - golint: {}
    - errcheck: {}
    - go-test: {}
    - script:
        run_if: .IsCI
        title: Manual CodeCov
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex

            curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import # One-time step
            curl -Os "https://uploader.codecov.io/latest/${CODECOV_OS}/codecov"
            curl -Os "https://uploader.codecov.io/latest/${CODECOV_OS}/codecov.SHA256SUM"
            curl -Os "https://uploader.codecov.io/latest/${CODECOV_OS}/codecov.SHA256SUM.sig"
            gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
            shasum -a 256 -c codecov.SHA256SUM
            
            chmod +x codecov

            curl -H "Accept: application/json" "https://uploader.codecov.io/${CODECOV_OS}/latest" | grep -o '\"version\":\"v[0-9\.\_]\+\"' | head -1
            
            echo "${GO_CODE_COVERAGE_REPORT_PATH}"
            ./codecov -Q "bitrise-step-3.2.0" -f "${GO_CODE_COVERAGE_REPORT_PATH}" -t "${CODECOV_UPLOAD_TOKEN}"

    - script:
        title: Run integration tests
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex

            current_envman="$(pwd)/_tmp/test_envman"
            go build -o "$current_envman"

            export PR="" PULL_REQUEST_ID=""
            export INTEGRATION_TEST_BINARY_PATH="$current_envman"

            # prevent the env var content (with the content of this script)
            # being added to the test process environment
            unset content
            go test -v ./_tests/integration/...

  release:
    title: Create binaries
    steps:
    - script:
        title: Create binaries
        inputs:
        - content: |
            #!/bin/bash
            set -ex

            echo
            echo "Create final binaries"
            echo "  Build number: $BITRISE_BUILD_NUMBER"

            export ARCH=x86_64
            export GOARCH=amd64

            # Create Darwin bin
            export OS=Darwin
            export GOOS=darwin

            DEPLOY_PATH="_bin/$BIN_NAME-$OS-$ARCH"
            echo "  Create final Darwin binary at: $DEPLOY_PATH"

            version_package="github.com/bitrise-io/envman/version"

            go build \
              -ldflags "-X $version_package.BuildNumber=$BITRISE_BUILD_NUMBER -X $version_package.Commit=$GIT_CLONE_COMMIT_HASH" \
              -o "$DEPLOY_PATH"

            envman add --key OSX_DEPLOY_PATH --value $DEPLOY_PATH
            cp $DEPLOY_PATH $BITRISE_DEPLOY_DIR/$BIN_NAME-$OS-$ARCH
            echo "  Copy final Darwin binary to: $BITRISE_DEPLOY_DIR/$BIN_NAME-$OS-$ARCH"


            # Create Linux binary
            export OS=Linux
            export GOOS=linux

            DEPLOY_PATH="_bin/$BIN_NAME-$OS-$ARCH"
            echo "  Create final Linux binary at: $DEPLOY_PATH"

            go build \
              -ldflags "-X $version_package.BuildNumber=$BITRISE_BUILD_NUMBER -X $version_package.Commit=$GIT_CLONE_COMMIT_HASH" \
              -o "$DEPLOY_PATH"

            envman add --key LINUX_DEPLOY_PATH --value $DEPLOY_PATH
            cp $DEPLOY_PATH $BITRISE_DEPLOY_DIR/$BIN_NAME-$OS-$ARCH
            echo "  Copy final Linux binary to: $BITRISE_DEPLOY_DIR/$BIN_NAME-$OS-$ARCH"
